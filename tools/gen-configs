#!/usr/bin/env bash
# shellcheck disable=SC2016

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
readonly SCRIPT_DIR

# shellcheck source=./colors.bash
source "$SCRIPT_DIR/colors.bash"
# shellcheck source=../src/load_internals.bash
source "$SCRIPT_DIR"/../src/load_internals.bash
_lobash.import_internals basic_meta_types module_meta erase_line
_lobash.imports sort lower_case.p

generate() {
  local category=${1,,}
  local -n c=category_$category

  printf -- '\n- [ ]   %s\n' "${category^}" >> "$TARGET_BASH"

  for module_name in "${c[@]}"; do
    if [[ ${map[${module_name}_status_0]} == tested ]]; then
      printf -- '  - [ ] %s\n' "$module_name" >> "$TARGET_BASH"
    fi
  done
}

add_to_map() {
  local name=$1
  local -a founds=()
  local i
  while read -r i; do
    [[ -n "$i" ]] && founds+=("$i")
  done < <(echo "$metadatas" | grep -Eo "^${name^}: .+$" | sed "s/${name^}: //" || echo "${2:-}" )

  map[${module_name}_${name}_sum]=${#founds[@]}
  for (( i = 0; i < ${#founds[@]}; i++ )); do
    map[${module_name}_${name}_$i]="${founds["$i"]}"
  done
}

main() {
  local TARGET_BASH
  TARGET_BASH="$(dirname "$SCRIPT_DIR")/config.example"
  local -A map
  local -a categories

  echo "To generate config: $TARGET_BASH"

  local -i module_count=0
  local filepath module_name category metadatas
  for filepath in $SCRIPT_DIR/../src/modules/*.bash; do
    ((module_count+=1))
    module_name=$(basename "$filepath" .bash)
    metadatas=$(_lobash.get_module_metadata_str "$filepath")

    category=$(echo "$metadatas" | grep -Eo '^Category: .+$' | sed 's/Category: //' | l.lower_case.p || echo '')

    if [[ -z $category ]]; then
      category='Unknown'
    fi

    local cate_name=category_${category}
    _lobash.erase_line
    printf '%s' "Scan file: $category/$module_name"

    if [[ -z ${!cate_name:-} ]]; then
      eval "declare -g -a ${cate_name}"
      categories+=("${category}")
    fi

    declare -n cate=$cate_name
    cate+=("$module_name")

    add_to_map status tested
  done

  categories=( $(l.sort categories) )

  cat <<EOF > "$TARGET_BASH"
# Choose the minimum version of Bash in which Lobash will run.
# Available values: 4.0, 4.1, 4.2, 4.3, 4.4
BASH_MIN_VERSION: 4.4
PREFIX: l.

# Select modules or categories to export
# - [ ]  Unselected
# - [x]  Selected
EOF

  for category in "${categories[@]}"; do
    [[ -z $category ]] && continue
    generate "$category"
  done

  printf '\n%b\n' "${GREEN}Generate: $TARGET_BASH${RESET_ALL}"
}

main "$@"

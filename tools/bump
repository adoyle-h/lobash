#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
set -o errtrace
(shopt -p inherit_errexit &>/dev/null) && shopt -s inherit_errexit

if (( $# == 0)) || [[ $1 == -h ]] || [[ $1 == --help ]]; then
  cat <<EOF
Usage: $0 <major|minor|patch>
Description: bump version for release
EOF
  exit 0
fi

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
readonly SCRIPT_DIR

semver=$SCRIPT_DIR/../tmp/semver
changelog=$SCRIPT_DIR/../CHANGELOG.md

_lobash.is_gnu_sed() {
  sed --version 2>/dev/null | grep 'GNU sed' >/dev/null
}

if _lobash.is_gnu_sed; then
  sedi() { sed -i "$@"; }
else
  sedi() { sed -i '' "$@"; }
fi

update_changelog() {
  local next_ver=$1

  local line_num
  line_num=$(grep -nE '^## \[Unreleased\]' "$SCRIPT_DIR/../CHANGELOG.md" | sed -E 's/^([0-9]+):.+/\1/')
  line_num=$(( line_num + 2 ))

  git-chglog --next-tag "v$next_ver" | \
    sedi "$line_num r /dev/stdin" "$changelog"

  echo "Updated file: $changelog"
}

ensure_semver() {
  if [[ ! -f $semver ]]; then
    echo "To download semver-tool"
    curl -Lo "$semver" https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
    chmod +x "$semver"
  fi
}

main() {
  if [[ ! -f "$changelog" ]]; then
    git-chglog > "$changelog"
    echo "Created file: $changelog"
    return 0
  fi

  ensure_semver

  local version_file="$SCRIPT_DIR/../version"
  local cur_ver next_ver
  cur_ver=$(cat "$version_file")
  next_ver=$( "$semver" bump "$1" "$cur_ver" )
  echo "$next_ver" > "$version_file"

  update_changelog "$next_ver"
}

main "$@"

name: CI

on:
  push:
    branches:
      - 'test/**'
      - develop
    tags:
      - v*

  pull_request:
    branches:
      - develop

  workflow_dispatch:
    inputs: {}

jobs:
  linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      max-parallel: 10
      matrix:
        # 5.2 and 5.2.9 are same in bash docker image
        BASHVER: ['4.0', '4.1', '4.2', '4.3', '4.4', '5.0', '5.1', '5.2']

    steps:
      - uses: actions/checkout@v3
      - run: BASHVER=${{ matrix.BASHVER }} BUILD_DIST=true ./tools/test-in-docker

  mac:
    runs-on: macos-12
    strategy:
      fail-fast: true
      max-parallel: 10
      matrix:
        # bash 4.0 has bug on MacOS: pointer being freed was not allocated
        BASHVER: ['4.1', '4.2', '4.3', '4.4', '5.0', '5.1', '5.2', '5.2.9']

    steps:
      - uses: actions/checkout@v3

      - name: Init
        run: |
          echo "PWD: $PWD"
          echo "ACT: ${{ env.ACT }}"

          git submodule update --init --recursive
          mkdir -p ./tmp

      - name: Cache bash
        if: ${{ !env.ACT }}
        id: cache-bash
        uses: actions/cache@v3
        with:
          path: ./tmp/bash-${{ matrix.BASHVER }}
          key: ${{ runner.os }}-bash-${{ matrix.BASHVER }}

      - name: Cache bash-install
        if: ${{ !env.ACT }}
        id: cache-bash-install
        uses: actions/cache@v3
        with:
          path: ./tmp/bash-install
          key: ${{ runner.os }}-bash-install-${{ matrix.BASHVER }}

      - name: Download bash-${{ matrix.BASHVER }}.tar.gz
        if: steps.cache-bash.outputs.cache-hit != 'true'
        run: |
          curl --silent -L -o ./bash.tar.gz https://ftp.gnu.org/gnu/bash/bash-${{ matrix.BASHVER }}.tar.gz
          tar -xzf ./bash.tar.gz
        working-directory: tmp

      - name: Install bash
        if: steps.cache-bash-install.outputs.cache-hit != 'true'
        run: |
          CFLAGS='-Wno-implicit-function-declaration -DSSH_SOURCE_BASHRC' ./configure --silent
          make
          mkdir -p ${{ github.workspace }}/tmp/bash-install
          make install prefix=/ DESTDIR=${{ github.workspace }}/tmp/bash-install
        working-directory: tmp/bash-${{ matrix.BASHVER }}

      - name: To build ./dist/lobash.bash
        run: |
          export PATH="${{ github.workspace }}/tmp/bash-install/bin:$PATH"
          bash --version
          ./build -m "${{ matrix.BASHVER }}" ./dist/

      - name: Start to test
        run: |
          export PATH="${{ github.workspace }}/tmp/bash-install/bin:$PATH"
          CI=true ./test -d
